@model PM.CORE.DTOs.ProductDto
@using System.Globalization

@{
    ViewData["Title"] = "Product Details";
}

@functions {
    public string FormatCurrency(decimal amount)
    {
        return amount.ToString("C", new CultureInfo("en-US"));
    }

    public string GetStockClass(int stock)
    {
        return stock switch
        {
            <= 0 => "text-danger",
            <= 10 => "text-warning",
            _ => "text-success"
        };
    }

    public string GetStockBadge(int stock)
    {
        return stock switch
        {
            <= 0 => "<span class=\"badge bg-danger ms-2\">Out of Stock</span>",
            <= 10 => $"<span class=\"badge bg-warning ms-2\">Low Stock ({stock} left)</span>",
            _ => ""
        };
    }
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Product Details</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ProductId)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.ProductId)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Category)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Price)</dt>
                        <dd class="col-sm-9">@FormatCurrency(Model.Price)</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Stock)</dt>
                        <dd class="col-sm-9">
                            <span class="@GetStockClass(Model.Stock)">
                                @Model.Stock.ToString("N0")
                                @Html.Raw(GetStockBadge(Model.Stock))
                            </span>
                        </dd>
                    </dl>
                    <div class="mt-4">
                        <a asp-action="Edit" asp-route-id="@Model.ProductId" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.ProductId" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add tooltips to stock badges
            $('[data-bs-toggle="tooltip"]').tooltip();
        });
    </script>
}